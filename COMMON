#!/bin/sh ## not executable, just for syntax highlighting

unset LD_PRELOAD

script="$(realpath "$0")"
dir="$(dirname "$script")"
progname="$(basename "$0")"
realprog="$(basename "$script")"

termux_root="/data/data/com.termux/files"
tmpdir="$termux_root/usr/tmp"
cgroupfs="/sys/fs/cgroup"
cgroup_dir="$cgroupfs/tcm"
cgroup_prefix="$cgroup_dir/_"
config_dir="$dir/config"
ns_dir="$dir/ns"

load_config()
{
	cont_name="$1"
	local container_description="(no description)"
	unset container_root
	. "$config_dir/$cont_name.conf"
	cont_root="$container_root"
	cont_desc="$container_description"
	[ -d "$cont_root" ] || mkdir -o "$cont_root"
}

error()
{
	echo "$progname: $1" >&2; return "${2-1}"
}

require()
{
	notfound()
	{
		error "${1-"error: need $i, please check system environment"}"
	}
	for i in "$@"
	do	case "$1" in
		dir:*) [ -d "${i#dir:}" ] || notfound;;
		file:*) [ -f "${i#file:}" ] || notfound;;
		fsentry:*) [ -e "${i#fsentry:}" ] || notfound;;
		cmd:*) type "${i#cmd:}" >/dev/null 2>&1 || notfound;;
		*) notfound "unknown requirement: $i";;
		esac
	done
}

countdown() ### ( time/s:, [msg], [finmsg] )
{
	local time="$1" msg="${2-}" finmsg="${3-}"
	while [ "$time" -gt 0 ]
	do	echo "$msg$time"
		sleep 1
		time="$((time - 1))"
	done
	[ "$finmsg" = "" ] || echo "$finmsg"
}

[ "$(id -u)" = 0 ] || error "need root privilege"

require cmd:tput
[ "${COLUMNS-}" ] || COLUMNS="$(tput cols)"

unshare_exec()
{
	local prog="$1"; shift
	[ -d "$ns_dir" ] || mkdir "$ns_dir"
	[ -f "$ns_dir/$cont_name.mnt" ] || touch "$ns_dir/$cont_name.mnt"
	exec unshare --mount="$ns_dir/$cont_name.mnt" -- "$prog" "$@"
}

add_bind()
{
	local src="$1"; dst="$2"; shift 2
	[ -d "$cont_root/$dst" ] || mkdir -p "$cont_root/$dst"
	mount "$@" -R "$src" "$cont_root/$dst"
}

mount_base()
{
	## suid root
	add_bind "$cont_root" "/" -o suid,dev
	## linux runtime
	for i in /proc /sys /dev
	do add_bind "$i" "$i"
	done
}

mount_android_runtime()
{
	for i in /apex/com.android.runtime /linkerconfig /system
	do add_bind "$i" "$i"
	done
}

switch_root()
{
require cmd:busybox
	cd "$cont_root"
	busybox pivot_root "$cont_root" .
	umount -fl .
	cd /
}

cgroup()
{
	[ -f "$cgroupfs/cgroup.stat" ] || error "cgroup unavailable"
	[ -d "$cgroup_dir" ] || mkdir "$cgroup_dir"
	[ -f "$cgroup_dir/cgroup.stat" ] || error "bad cgroup filesystem"
	local cgroup_dir="$cgroup_prefix$cont_name"
	until [ "$#" = 0 ]
	do	case "$1" in
		create) mkdir "$cgroup_dir";;
		attach) echo "$$" > "$cgroup_dir/cgroup.procs";;
		kill) echo 1 > "$cgroup_dir/cgroup.kill";;
		remove) rmdir "$cgroup_dir";;
		is_running) [ -d "$cgroup_dir" ];;
		kill_all)	echo 1 > "$cgroup_dir/cgroup.kill"
				for i in "$cgroup_dir"/*
				do [ ! -d "$i" ] || rmdir "$1"
				done;;
		*) error "unknown cgroup operation $1";;
		esac
		shift
	done
}
